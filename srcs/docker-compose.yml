# Services are the docker images that we want to build and run :
# - build = location of the Dockerfile
# - container_name = name of the container
# - restart = restarts the container in case of crash
# - env_file = file to use to generate environment variables inside the docker container
# - volumes = used to keep files from the docker container permanently in memory
# - network = the network we want our container to be on. Docker containers on the same network can communicate even if ports are not opened
# - depends_on = waits for the service depended on to be built before running this service
# - ports: ip:port = ports to open on the docker container (can specify the ip address that can access the port)

# Services we want to build (according to 42 subject) :
# Nginx : Web server software, receives  http requests and sends back files to the client
# Wordpress : Content management system written in php, to handle websites. Needs a MySQL or MariaDB database
# MariaDB : Database system
# Redis : Redis is an in-memory key-value store. It can be used as a cache to speed up your WordPress website (especially database queries, sessions, objects).
# FTP : An FTP server lets you remotely upload/download/manage files of your WordPress instance using FileZilla, WinSCP, etc.
#       You point the FTP server's root folder to /var/www/html, so you upload themes, plugins, etc. directly.
# Website : Static website (html file)
# Adminer : Adminer is a lightweight database management tool â€” it's like phpMyAdmin, but faster, smaller, simpler. You can manage MariaDB with a nice web interface.

services:
  mariadb:
    build: requirements/mariadb/
    container_name: mariadb42
    restart: always
    env_file: .env
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - inception

  wordpress:
    build: requirements/wordpress/
    container_name: wordpress42
    restart: always
    env_file: .env
    volumes:
      - wp_data:/var/www/html
    depends_on:
      - mariadb
      - redis
    networks:
      - inception

  nginx:
    build: requirements/nginx/
    container_name: nginx42
    restart: always
    ports:
      - "443:443"
    volumes:
      - wp_data:/var/www/html
      - web_data:/var/www/html/website
    depends_on:
      - wordpress
      - website
    networks:
      - inception

  redis:
    build: requirements/bonus/redis/
    container_name: redis42
    restart: always
    networks:
      - inception

  ftp:
    build: requirements/bonus/ftp/
    container_name: ftp42
    restart: always
    env_file : .env
    networks:
      - inception
    volumes:
      - wp_data:/var/www/html
      - web_data:/var/www/html/website
    ports:
      - "127.0.0.1:21:21"
      - "127.0.0.1:40000:40000"

  website:
    build: requirements/bonus/website/
    container_name: website42
    restart: always
    volumes:
      - web_data:/var/www/html
    networks:
      - inception

  adminer:
    build: requirements/bonus/adminer/
    container_name: adminer42
    restart: always
    networks:
      - inception

volumes:
  db_data:
    driver: local
    driver_opts:
      type: none
      device: '/home/qliso/data/mariadb'
      o: bind
  wp_data:
    driver: local
    driver_opts:
      type: none
      device: '/home/qliso/data/wordpress'
      o: bind
  web_data:
#    driver: local
#    driver_opts:
#      type: none
#      device: '/home/qliso/data/website'
#      o: bind

networks:
  inception:
